// =========================================================
// Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º
// - –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// - –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// - –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// - –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// - –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// - –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggae¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// console.log('==== Example 1 ====');
// const genres = ['Jazz', 'Blues']; // –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// genres.push('Rock and roll'); // –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.

// console.log(genres[0]); // –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// console.log(genres[genres.length - 1]); // –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

// console.log(genres.shift()); // –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// console.log(genres); // –ø–æ—Å–º–æ—Ç—Ä–∏–º —É–¥–∞–ª–∏–ª—Å—è –ª–∏ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç

// genres.unshift('Country', 'Reggae'); // –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggae¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
// console.log(genres); // –ø–æ—Å–º–æ—Ç—Ä–∏–º –¥–æ–±–∞–≤–∏–ª–∏—Å—å –ª–∏ –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã

// =========================================================
// Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
// –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values
// –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.
// –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–º–Ω–æ–∂–∏—Ç—å –∏—Ö –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞.
// S = a √ó b, –≥–¥–µ S ‚Äî –ø–ª–æ—â–∞–¥—å; a, b ‚Äî –¥–ª–∏–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞.

// console.log('==== Example 2 ====');
// const values = '8 11'; // –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º
// const strValues = values.split(' ');
// const s = parseFloat(strValues[0]) * parseFloat(strValues[1]);

// console.log('A =', strValues[0]);
// console.log('B =', strValues[1]);
// console.log('S =', s);

// =========================================================
// Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É
// –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞:
//  1: üçé
//  2: üçá
//  3: üçë
// ...
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// console.log('==== Example 3 ====');
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// // —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ü–∏–∫–ª
// for (let i = 0; i < fruits.length; i += 1) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

// // —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ forEach
// fruits.forEach((fruit, idx, arr) => {
//   console.log(`${idx + 1}: ${fruit}`);
// });

// =========================================================
// Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
// –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// Jacob - 89001234567
// William - 89001112233
// ...
// –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è
// —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö
// —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
// –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// console.log('==== Example 4 ====');
// const names = 'Jacob,William,Solomon,Artemis'; // 4 —à—Ç.
// const phones = '89001234567,89001112233,890055566377,890055566300'; // 4 —à—Ç.
// const namesArr = names.split(',');
// const phonesArr = phones.split(',');

// // —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–∞—Å—Å–∏–≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
// console.log(namesArr);
// console.log(phonesArr);

// for (let i = 0; i < namesArr.length; i += 1) {
//   console.log(`${namesArr[i]} - ${phonesArr[i]}`);
// }

// =========================================================
// Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏
// –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.
// –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è
// –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º.
// –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// console.log('==== Example 5 ====');
// const string = 'Welcome to the future';
// const strArr = string.split(' ');
// console.log(strArr); // –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Å–∏–≤ —Å–ª–æ–≤

// strArr.shift();
// strArr.pop();
// console.log(strArr); // –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Å–∏–≤ —Å–ª–æ–≤

// const result = strArr.join(' ');
// console.log(result);
// console.log(`"${result}"`); // —É–±–µ–¥–∏–º—Å—è –≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ –∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏

// =========================================================
// Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É
// (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

// console.log('==== Example 6 ====');
// const string = 'Welcome to the future';
// const strArr = string.split(''); // —Ä–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ –±—É–∫–≤
// console.log(strArr); // –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Å–∏–≤ –±—É–∫–≤

// const reversedArr = strArr.reverse();
// console.log(strArr); // –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—Å–∏–≤ –±—É–∫–≤ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

// const reversedStr = reversedArr.join('');
// console.log(reversedStr);

// // –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç (chaining)
// const rev = string.split('').reverse().join('');
// console.log(rev);

// =========================================================
// Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫
// –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

// console.log('==== Example 7 ====');
// // –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
// // ['c++', 'haskel', 'javascript', 'php', 'python', 'ruby']
// // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–µ—Ä–≤–æ–º—É —Å–∏–º–≤–æ–ª—É
// // ['c++', 'haskel', 'javascript', 'python', 'php', 'ruby']

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// // langs.sort(); // –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ
// console.log(langs); // –¥–æ

// for (let i = 0; i < langs.length; i += 1) {
//   for (let j = i; j < langs.length; j += 1) {
//     if (langs[i][0] > langs[j][0]) {
//       const temp = langs[i];
//       langs[i] = langs[j];
//       langs[j] = temp;
//     }
//   }
// }
// console.log(langs); // –ø–æ—Å–ª–µ

// =========================================================
// Example 8 - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
// –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª.
// –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

// console.log('==== Example 8 ====');
// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0]; // –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –∫–∞–∫ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –º–∏–Ω–∏–º—É–º
// let max = numbers[0]; // –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –∫–∞–∫ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –º–∏–Ω–∏–º—É–º

// for (const num of numbers) {
//   // –Ω–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º—É–º
//   if (num < min) {
//     min = num;
//   }

//   // –Ω–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º—É–º
//   if (num > max) {
//     max = num;
//   }
// }

// console.log(min); // 1
// console.log(max); // 94
